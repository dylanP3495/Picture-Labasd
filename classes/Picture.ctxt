#BlueJ class context
comment0.target=Picture
comment0.text=\r\n\ A\ class\ that\ represents\ a\ picture.\ \ This\ class\ inherits\ from\ \r\n\ SimplePicture\ and\ allows\ the\ student\ to\ add\ functionality\ to\r\n\ the\ Picture\ class.\ \ \r\n\ \r\n\ @author\ Barbara\ Ericson\ ericson@cc.gatech.edu\r\n
comment1.params=
comment1.target=Picture()
comment10.params=
comment10.target=void\ mirrorVertical()
comment11.params=
comment11.target=void\ mirrorTemple()
comment12.params=
comment12.target=void\ invert()
comment13.params=fromPic\ startRow\ startCol
comment13.target=void\ copy(Picture,\ int,\ int)
comment14.params=fromPic\ startRow\ startCol
comment14.target=void\ copy2(Picture,\ int,\ int)
comment15.params=
comment15.target=void\ fixUnderwater()
comment16.params=args
comment16.target=void\ main(java.lang.String[])
comment17.params=
comment17.target=void\ mirrorVerticalRightToLeft()
comment18.params=
comment18.target=void\ mirrorHorizontal()
comment19.params=
comment19.target=void\ mirrorHorizontalBotToTop()
comment2.params=fileName
comment2.target=Picture(java.lang.String)
comment20.params=
comment20.target=void\ mirrorDiagonal()
comment21.params=
comment21.target=void\ mirrorArms()
comment22.params=
comment22.target=void\ mirrorGulls()
comment23.params=fromPic\ startRow\ endRow\ startCol\ endCol
comment23.target=void\ copy2(Picture,\ int,\ int,\ int,\ int)
comment24.params=
comment24.target=void\ createCollage()
comment25.params=
comment25.target=void\ keepOnlyBlue()
comment26.params=
comment26.target=void\ myCollage()
comment27.params=edgeDist
comment27.target=void\ edgeDetection(int)
comment27.text=\ Method\ to\ show\ large\ changes\ in\ color\ \r\n\ @param\ edgeDist\ the\ distance\ for\ finding\ edges\r\n
comment28.params=edgeDist
comment28.target=void\ edgeDetection2(int)
comment29.params=testColor1\ testColor2
comment29.target=double\ colorDistance(java.awt.Color,\ java.awt.Color)
comment3.params=height\ width
comment3.target=Picture(int,\ int)
comment30.params=myColors
comment30.target=java.awt.Color\ getAverageColor(java.awt.Color[])
comment31.params=pixels
comment31.target=java.awt.Color[]\ getPixelColors(java.util.ArrayList)
comment32.params=pixels\ startRow\ startCol\ width\ height
comment32.target=Pixel[][]\ getPixelCluster(Pixel[][],\ int,\ int,\ int,\ int)
comment33.params=fullArray\ angle\ typeOf
comment33.target=java.util.ArrayList\ getPartialArrayLine(Pixel[][],\ double,\ int)
comment33.text=\r\n\ Method\ getPartialArray\ takes\ an\ array\ of\ pixels,\r\n\ an\ angle\ to\ divide\ the\ array,\ and\ the\ "type\ of"\ that\r\n\ determines\ whether\ it\ returns\ the\ top/right\ (0)\ or\r\n\ the\ bottom/left\ (1)\r\n\ \r\n\ This\ one\ only\ takes\ the\ elements\ that\ lie\ on\ the\ line\ of\ division\r\n\ \r\n\ Need\ to\ update\ this\ method\ to\ match\ the\ one\ below\ ********\r\n\ \r\n\ @param\ pixels\ \r\n\ @param\ angle\ the\ angle\ to\ divide,\ given\ in\ radians\ (0\ to\ pi)\r\n
comment34.params=fullArray\ angle\ typeOf
comment34.target=java.util.ArrayList\ getPartialArray(Pixel[][],\ double,\ int)
comment34.text=\r\n\ Method\ getPartialArray\ takes\ an\ array\ of\ pixels,\r\n\ an\ angle\ to\ divide\ the\ array,\ and\ the\ "type\ of"\ that\r\n\ determines\ whether\ it\ returns\ the\ top/right\ (0)\ or\r\n\ the\ bottom/left\ (1)\r\n\ \r\n\ Need\ to\ update\ this\ method\ to\ match\ the\ one\ below\ ********\r\n\ \r\n\ @param\ pixels\ \r\n\ @param\ angle\ the\ angle\ to\ divide,\ given\ in\ radians\ (0\ to\ pi)\r\n
comment35.params=fullArray\ angle\ typeOf
comment35.target=java.util.ArrayList\ getPartialArray(int[][],\ double,\ int)
comment4.params=copyPicture
comment4.target=Picture(Picture)
comment5.params=image
comment5.target=Picture(java.awt.image.BufferedImage)
comment6.params=
comment6.target=java.lang.String\ toString()
comment7.params=
comment7.target=void\ zeroBlue()
comment8.params=
comment8.target=void\ negate()
comment9.params=
comment9.target=void\ grayscale()
numComments=36
